the ``100-matrix_mul`` module
===========================

Using ``matrix_mul``
-----------------

This is an example text file in reStructuredText format.  First import
``matrix_mul`` from ``100-matrix_mul`` module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Now use it:

multipliable matrices:

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

m_a matrix and m_b non-matrix:

    >>> matrix_mul([[1, 2]], "text")           
    Traceback (most recent call last):   
        ...
    TypeError: m_b must be a list

m_a non-matrix and m_b matrix:

    >>> matrix_mul(5, [[2, 3]])        
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

m_a matrix and m_b empty matrix:

    >>> matrix_mul([[1, 2]], [[]])     
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

m_a empty list and m_b matrix:

    >>> matrix_mul([], [[1, 2]])   
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

m_a matrix and m_b a single list:

    >>> matrix_mul([[5, 6]], [9]) 
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

m_a a sinle list and m_b matrix:

    >>> matrix_mul([7], [[1,3], [4, 5]]) 
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

m_a integer matrix and m_b a matrix with a string element:

    >>> matrix_mul([[5, 6]], [[1, 2], [3, '4']]) 
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats

m_a a matrix with a string element and m_b integer matrix:

    >>> matrix_mul([[1, '8']], [[1,3], [4, 5]]) 
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

m_a matrix with unequal row size m_b a matrix with equal row size:

    >>> matrix_mul([[5, 6], [7, 8], [9, 3, 4]], [[1, 2], [3, 6]])   
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

m_a matrix with equal row size m_b a matrix with unequal row size:

    >>> matrix_mul([[5, 6], [7, 8], [9, 3]], [[1, 2], [3, 6], [2]]) 
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size
    
non-multipliable matrices:

    >>> matrix_mul([[5, 6], [7, 8]], [[1, 2], [3, 6], [2, 6]])         
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied
    
missing one argument:

    >>> matrix_mul([[5, 6], [7, 8]])                           
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
    
missing two arguments:
    >>> matrix_mul()                 
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
